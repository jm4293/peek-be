name: Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.0'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci

      - name: 애플리케이션 빌드
        run: npm run build

      - name: 배포 패키지 생성
        run: |
          cd dist
          tar -czf ../deployment.tar.gz .
          cd ..

      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: S3에 업로드
        run: |
          aws s3 cp deployment.tar.gz s3://${{ secrets.S3_BUCKET_NAME }}/deployments/

      # - name: EC2에 배포
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     port: ${{ secrets.EC2_PORT }}
      #     script: |
      #       # 배포 디렉토리 생성
      #       mkdir -p /home/${{ secrets.EC2_USERNAME }}/deployments
      #       cd /home/${{ secrets.EC2_USERNAME }}/deployments

      #       # S3에서 최신 배포 파일 다운로드
      #       aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/deployments/deployment.tar.gz .

      #       # 기존 애플리케이션 중지
      #       pm2 stop peek-be || true
      #       pm2 stop peek-admin || true

      #       # 기존 배포 파일 백업
      #       if [ -d "/home/${{ secrets.EC2_USERNAME }}/app" ]; then
      #         mv /home/${{ secrets.EC2_USERNAME }}/app /home/${{ secrets.EC2_USERNAME }}/app_backup_$(date +%Y%m%d_%H%M%S)
      #       fi

      #       # 새 배포 파일 압축 해제
      #       mkdir -p /home/${{ secrets.EC2_USERNAME }}/app
      #       tar -xzf deployment.tar.gz -C /home/${{ secrets.EC2_USERNAME }}/app

      #       # .env 파일 복사
      #       if [ -f "/home/${{ secrets.EC2_USERNAME }}/.env" ]; then
      #         cp /home/${{ secrets.EC2_USERNAME }}/.env /home/${{ secrets.EC2_USERNAME }}/app/
      #       fi

      #       # 의존성 설치
      #       cd /home/${{ secrets.EC2_USERNAME }}/app
      #       npm ci --only=production

      #       # PM2로 애플리케이션 시작
      #       pm2 start /home/${{ secrets.EC2_USERNAME }}/app/apps/peek/main.js --name "peek-be"
      #       # pm2 start /home/${{ secrets.EC2_USERNAME }}/app/apps/peek-admin/main.js --name "peek-admin"

      #       # PM2 설정 저장
      #       pm2 save

      #       # 배포 완료 후 임시 파일 정리
      #       cd /home/${{ secrets.EC2_USERNAME }}/deployments
      #       rm -f deployment.tar.gz

      #       echo "Deployment completed successfully!"
